/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    @Test public void testRestaurantConstructor(){
        Restaurant holder = new Restaurant("Chi's",5,"$$");

        assertSame(5,holder.stars);



    }

    @Test public void testToString(){
        Restaurant holder = new Restaurant("Chi's",5,"$$");

        System.out.println(holder.toString());
        assertEquals("The selected restaurant is Chi's, with average 5 stars reviews and in the Price Category of $$.",holder.toString());
    }

    @Test public void testReviewConstructor(){
        Restaurant holder = new Restaurant("Chi's",5,"$$");
        Review reviewed = new Review("Was very cool and epic","Cristian",2);
        assertEquals("Cristian", reviewed.author);

    }

    @Test public void testReviewToString(){
        Restaurant holder = new Restaurant("Chi's",5,"$$");
        Review reviewed = new Review("Was very cool and epic.","Cristian",2);

        System.out.println(reviewed.toString());

        assertEquals("Hello Cristian, this your review for Chi's. Rated Stars:2 Review:Was very cool and epic.",reviewed.toString());
    }

    @Test public void testUpdateReviewRating(){
        Restaurant holder = new Restaurant("Chi's",1,"$$");
        Review newReview = new Review("Was very cool and epic.","Cristian",2);
        holder.addReview(newReview);
        Review newReviewTwo = new Review("Was very cool .","Cristian Two",4);
        holder.addReview(newReviewTwo);
        Review newReviewThree = new Review("Was very not cool cool .","Cristian Three",1);
        holder.addReview(newReviewThree);

        System.out.println(holder.toString());

        System.out.println(newReview.toString());
        newReview.updateStars("Cristian",5, holder);
        System.out.println(newReview.toString());
        newReviewThree.updateStars("Cristian Three",5,holder);
        newReviewTwo.updateStars("Cristian Two",5,holder);
        System.out.println(holder.toString());


    }

    @Test public void testShop(){
        Shop newShop = new Shop("elShop","This shop is cool and we sell els","$$");

        System.out.println(newShop.name);
        System.out.println(newShop.toString());

        assertEquals("Selected Shop is elShop, This shop is cool and we sell els. Average Reviews are 0",newShop.toString());

    }

    @Test public void testShopToString(){
        Shop newShop = new Shop("elShop","This shop is cool and we sell els","$$");
        newShop.addReview("cristian","very cool shop bought all els",4);
        System.out.println(newShop.toString());
        assertEquals("Selected Shop is elShop, This shop is cool and we sell els. Average Reviews are 4",newShop.toString());
    }

    @Test public void testBasicTheaterStuff(){
        Theater newTheater = new Theater("Epic Movies");

        System.out.println(newTheater.toString());

        newTheater.addMovie("the epic movie");
        System.out.println(newTheater.toString());
        newTheater.addMovie("The epic movie TWO");
        System.out.println(newTheater.toString());
        newTheater.addMovie("THE EPIC MOVIE THREE: RETURN OF THE EPIC");
        System.out.println(newTheater.toString());

        newTheater.removeMovie("The epic movie TWO");
        System.out.println(newTheater.toString());

        assertEquals("Welcome to the grand Epic Movies Theater!, We are showing the epic movie, THE EPIC MOVIE THREE: RETURN OF THE EPIC, ",newTheater.toString());
    }

    @Test public void testAdvancedTheaterStuff(){
        Theater newTheater = new Theater("Epic Movies");

        System.out.println(newTheater.toString());

        newTheater.addNewMovieReview(4,"the epic movie","Cristian","Was cool movie, not sure about it being epic");

        System.out.println(newTheater.toString());

        System.out.println(newTheater.newMovieHolder.size());

        assertEquals(1,newTheater.newMovieHolder.size());
    }
}
